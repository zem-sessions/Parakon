## Settings file was created by plugin ValheimRAFT v2.5.3
## Plugin GUID: zolantris.ValheimRAFT

[Config]

## Users can leave this empty. If they do not, the mod will attempt to match the folder string. Allows users to set the folder search name if their manager renames the folder, r2modman has a fallback case added to search for zolantris-ValheimRAFTDefault search values are an ordered list first one is always matching non-empty strings from this pluginFolderName.Folder Matches are:  zolantris-ValheimRAFT, zolantris-ValheimRAFT Zolantris-ValheimRAFT, and ValheimRAFT
# Setting type: String
# Default value: 
pluginFolderName = 

## Sets the raftcreative command height, raftcreative is relative to the current height of the ship, negative numbers will sink your ship temporarily
# Setting type: Single
# Default value: 5
RaftCreativeHeight = 10

## Anchor keyboard hotkey. Only applies to keyboard
# Setting type: KeyboardShortcut
# Default value: LeftShift
AnchorKeyboardShortcut = LeftShift

[CustomMesh]

## Allows placing a dynamically sized cube that removes all water meshes intersecting with it. This also removes all water meshes when looking through it. So use it wisely, it's not perfect
# Setting type: Boolean
# Default value: true
Water Mask Prefabs Enabled = false

## login/logoff point moves player to last interacted bed or first bed on ship
# Setting type: Boolean
# Default value: false
Enable Testing 4x4 Water Mask Prefabs, these are meant for demoing water obstruction. = false

[Debug]

## Enable sentry debug logging. Requires sentry logging plugin installed to work. Sentry Logging plugin will make it easier to troubleshoot raft errors and detect performance bottlenecks. The bare minimum is collected, and only data related to ValheimRaft. See https://github.com/zolantris/ValheimMods/tree/main/src/ValheimRAFT#logging-metrics for more details about what is collected
# Setting type: Boolean
# Default value: true
Enable Sentry Metrics (requires sentryUnityPlugin) = false

## Outputs more debug logs for the Vehicle components. Useful for troubleshooting errors, but will spam logs
# Setting type: Boolean
# Default value: false
Debug logging for Vehicle/Raft = false

## Removes the start scene background, only use this if you want to speedup start time
# Setting type: Boolean
# Default value: false
RemoveStartMenuBackground = false

# Setting type: Boolean
# Default value: true
ShowShipState = true

## Outputs all custom sail information when saving and updating ZDOs for the sails. Debug only.
# Setting type: Boolean
# Default value: false
HasDebugSails = false

## Makes all clients sync physics
# Setting type: Boolean
# Default value: false
SyncShipPhysicsOnAllClients = false

[Deprecated Config]

## Allows users to set the raft floor spawn height. 0.45 was the original height in 1.4.9 but it looked a bit too low. Now people can customize it
# Setting type: Single
# Default value: 0.6
Initial Floor Height (V1 raft) = 0.6

[Graphics]

## Allow sails to fade in fog. Unchecking this will be slightly better FPS but less realistic. Should be fine to keep enabled
# Setting type: Boolean
# Default value: true
Sails Fade In Fog = true

[Hud]

## Shows the anchored status above vehicle anchors prefab. This text will update based on state change
# Setting type: Boolean
# Default value: true
HudAnchorTextAboveAnchors = true

## Hides the BepInEx.Configuration.ConfigDescription after X seconds a specific amount of time has passed. Setting this to 0 will mean it never hides
# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 20
HideAnchorStateMessageTimer = 3

## Sets the anchor text size. Potentially Useful for those with different monitor sizes
# Setting type: Int32
# Default value: 4
# Acceptable value range: From 0 to 20
HudAnchorTextSize = 4

[MinimapConfig]

## The interval in seconds at which DynamicSpawn Player pins are synced to the client.
# Setting type: Single
# Default value: 3
# Acceptable value range: From 1 to 200
BedPinSyncInterval = 3

## The interval in seconds at which vehicle pins are synced to the client.
# Setting type: Single
# Default value: 3
# Acceptable value range: From 1 to 200
VehiclePinSyncInterval = 3

## Set the name of the vehicle icon.
# Setting type: String
# Default value: Vehicle
VehicleNameTag = Vehicle

## Shows all vehicles on global map. All vehicles will update their position.
# Setting type: Boolean
# Default value: false
ShowAllVehiclesOnMap = false

## A radius in which all vehicles are revealed. This is more balanced than ShowAllVehicles.
# Setting type: Single
# Default value: 50
# Acceptable value range: From 5 to 1000
VisibleVehicleRadius = 1000

## Will show your bed on you vehicle. This requires DynamicLocations to be enabled. This config may be migrated to dynamic locations.
# Setting type: Boolean
# Default value: true
ShowBedsOnVehicles = true

[ModSupport:DynamicLocations]

## login/logoff point moves player to last interacted bed or first bed on ship
# Setting type: Boolean
# Default value: true
DynamicLocationLoginMovesPlayerToBed = true

[Patches]

## Enables DynamicLocations mod to access ValheimRAFT/Vehicles identifiers.
# Setting type: Boolean
# Default value: true
DynamicLocations = true

## Patches relative rotation allowing for copying rotation and building while the raft is at movement, this toggle is only provided in case patches regress anything in Gizmos and players need a work around.
# Setting type: Boolean
# Default value: false
ComfyGizmo - Enable Patch = false

## Vehicle/Raft Creative mode will set all axises to 0 for rotation instead keeping the turn axis. Gizmo has issues with rotated vehicles, so zeroing things out is much safer. Works regardless of patch if mod exists
# Setting type: Boolean
# Default value: true
ComfyGizmo - Vehicle Creative zero Y rotation = true

## Prevents pausing on a boat, pausing causes a TON of desync problems and can make your boat crash or other players crash
# Setting type: Boolean
# Default value: true
Vehicles Prevent Pausing = true

## Prevents pausing on a boat during singleplayer. Must have the Vehicle Prevent Pausing patch as well
# Setting type: Boolean
# Default value: true
Vehicles Prevent Pausing SinglePlayer = true

## Fixes the PlanBuild mod position problems with ValheimRaft so it uses localPosition of items based on the parent raft. This MUST be enabled to support PlanBuild but can be disabled when the mod owner adds direct support for this part of ValheimRAFT. PlanBuild mod can be found here. https://thunderstore.io/c/valheim/p/MathiasDecrock/PlanBuild/
# Setting type: Boolean
# Default value: false
Enable PlanBuild Patches (required to be on if you installed PlanBuild) = false

[PrefabConfig]

## The place the player is placed after they leave the ladder. Defaults to Y +0.25 and Z +0.5 meaning you are placed forwards of the ladder.
# Setting type: Vector3
# Default value: {"x":0.0,"y":0.0,"z":0.0}
RopeLadderEjectionPoint = {"x":0.0,"y":0.0,"z":0.0}

## Allows you to customize what piece the raft initializes with. Admins only as this can be overpowered.
# Setting type: VehicleShipInitPiece
# Default value: Hull4X8
# Acceptable values: Hull4X8, HullFloor2X2, HullFloor4X4, WoodFloor2X2, Nautilus
PrefabConfig = Hull4X8

## Allows you to customize how fast you can climb a ladder when in run mode
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 1 to 10
ropeLadderRunClimbSpeedMult = 2

## Shows the controls required to auto ascend/descend and run to speedup ladder
# Setting type: Boolean
# Default value: true
ropeLadderHints = true

## Set the experimental glass color for your vehicle. This will be used for most glass meshes. This is the default color. Eventually players can customize the color of the glass.
# Setting type: Color
# Default value: 9999990D
GlassDefaultColor = 9999990D

[Propulsion]

## Sets the absolute max speed a ship can ever hit with sails. Prevents or enables space launches, cannot exceed MaxPropulsionSpeed.
# Setting type: Single
# Default value: 30
# Acceptable value range: From 10 to 200
MaxSailSpeed = 30

## Sets the mass percentage of the ship that will slow down the sails
# Setting type: Single
# Default value: 55
MassPercentage = 55

## Sets the speed at which it becomes significantly harder to gain speed per sail area
# Setting type: Single
# Default value: 1
SpeedCapMultiplier = 1

## Set the Back speed of rudder, this will apply with sails
# Setting type: Single
# Default value: 1
Rudder Back Speed = 1

## Set the Slow speed of rudder, this will apply with sails
# Setting type: Single
# Default value: 1
Rudder Slow Speed = 1

## Set the Half speed of rudder, this will apply with sails
# Setting type: Single
# Default value: 0
Rudder Half Speed = 0

## Set the Full speed of rudder, this will apply with sails
# Setting type: Single
# Default value: 0
Rudder Full Speed = 0

## enables ship weight calculations for sail-force (sailing speed) and future propulsion, makes larger ships require more sails and smaller ships require less
# Setting type: Boolean
# Default value: true
HasShipWeightCalculations = true

## enables ship weight calculations for containers which affects sail-force (sailing speed) and future propulsion calculations. Makes ships with lots of containers require more sails
# Setting type: Boolean
# Default value: false
HasShipContainerWeightCalculations = false

## Enables all custom propulsion values
# Setting type: Boolean
# Default value: false
EnableCustomPropulsionConfig = false

## Manual sets the sail wind area multiplier the custom tier1 sail. Currently there is only 1 tier
# Setting type: Single
# Default value: 0.5
SailCustomAreaTier1Multiplier = 0.5

## Manual sets the sail wind area of the tier 1 sail.
# Setting type: Single
# Default value: 5
SailTier1Area = 5

## Manual sets the sail wind area of the tier 2 sail.
# Setting type: Single
# Default value: 10
SailTier2Area = 10

## Manual sets the sail wind area of the tier 3 sail.
# Setting type: Single
# Default value: 20
SailTier3Area = 20

## Manual sets the sail wind area of the tier 4 sail.
# Setting type: Single
# Default value: 40
SailTier4Area = 40

## Flight Vertical Continues UntilToggled: Saves the user's fingers by allowing the ship to continue to climb or descend without needing to hold the button
# Setting type: Boolean
# Default value: true
FlightVerticalToggle = true

## Flight allows for different rudder speeds. Use rudder speed only. Do not use sail speed.
# Setting type: Boolean
# Default value: false
FlightHasRudderOnly = false

## ForceSyncedRigidbody ignores all allowances that toggle SyncRigidbody related to flight. This will require a flight ascend value of 1 otherwise flight will be broken. Use this is there is problems with SyncRigidbody
## Other methods removed after 2.5.0
# Setting type: VehiclePhysicsMode
# Default value: ForceSyncedRigidbody
# Acceptable values: ForceSyncedRigidbody
VehiclePhysicsMode = ForceSyncedRigidbody

## Toggles a lean while sailing with wind power. Cosmetic only and does not work in multiplayer yet. Warning for those with motion sickness, this will increase your symptoms. Prepare your dramamine!
# Setting type: Boolean
# Default value: false
EXPERIMENTAL_LeanTowardsWindSailDirection = false

## Set the max lean angle when wind is hitting sides directly
# Setting type: Single
# Default value: 10
# Acceptable value range: From 0 to 30
EXPERIMENTAL_LeanTowardsWindSailDirectionMaxAngle = 10

## Set the base turning power of the steering wheel without a rudder
# Setting type: Single
# Default value: 0.7
turningPowerNoRudder = 0.7

## Set the turning power with a rudder prefab attached to the boat. This value overrides the turningPowerNoRudder config.
# Setting type: Single
# Default value: 1
turningPowerWithRudder = 1

## Vehicles do not require controls while in slow and reverse with a person on them
# Setting type: Boolean
# Default value: false
slowAndReverseWithoutControls = false

## Vehicles can now float on land. What is realism. Experimental only until wheels are invented. Must use rudder speeds to move forwards.
# Setting type: Boolean
# Default value: false
enableLandVehicles = false

## Lets the baseGame sails Tiers1-4 to rotate based on wind direction
# Setting type: Boolean
# Default value: true
enableBaseGameSailRotation = true

## Lifts the anchor when using a speed change key, this is a QOL to prevent anchor from being required to be pressed when attempting to change the ship speed
# Setting type: Boolean
# Default value: false
shouldLiftAnchorOnSpeedChange = false

## Ascent and Descent speed for the vehicle in the air. This value is interpolated to prevent jitters.
# Setting type: Single
# Default value: 2
# Acceptable value range: From 0.01 to 10
BallastClimbingOffset = 2

## This applies to both Ballast and Flight modes. The vehicle will use this value to interpolate the climbing offset. Meaning low value will be slower climbing/ballast and high values will be instant and match the offset. High values will result in jitters and potentially could throw people off the vehicle. Expect values of 0.01 and 1. IE 1% and 100%
# Setting type: Single
# Default value: 0.5
# Acceptable value range: From 0.01 to 1
VerticalSmoothingSpeed = 0.5

## Plus or minus deadzone of the wheel when turning. Setting this to 0 will disable this feature. This will zero out the rudder if the user attempts to navigate with a value lower than this threshold range
# Setting type: Single
# Default value: 0.02
# Acceptable value range: From 0 to 0.1
WheelDeadZone = 0.02

[Rams]

## Will keep the prefab available for aethetics only, will not do any damage nor will it initialize anything related to damage. Alternatives are using the damage tweaks.
# Setting type: Boolean
# Default value: true
ramDamageEnabled = false

## Maximum damage for all damages combined. This will throttle any calcs based on each damage value. The throttling is balanced and will fit the ratio of every damage value set. This allows for velocity to increase ram damage but still prevent total damage over specific values
# Setting type: Single
# Default value: 200
maximumDamage = 200

## enable damage caps
# Setting type: Boolean
# Default value: true
maxDamageCap = true

## slashDamage for Ram Blades. the base applied per hit on all items within the hit area. This damage is affected by velocity and ship mass.
# Setting type: Single
# Default value: 0
slashDamage = 0

## bluntDamage the base applied per hit on all items within the hit area. This damage is affected by velocity and ship mass.
# Setting type: Single
# Default value: 10
bluntDamage = 10

## chopDamage for Ram Blades excludes Ram Stakes. the base applied per hit on all items within the hit area. This damage is affected by velocity and ship mass.. Will damage trees dependending on tool tier settings
# Setting type: Single
# Default value: 5
chopDamage = 5

## pickDamage the base applied per hit on all items within the hit area. This damage is affected by velocity and ship mass. Will damage rocks as well as other entities
# Setting type: Single
# Default value: 20
pickaxeDamage = 20

## Pierce damage for Ram Stakes. the base applied per hit on all items within the hit area. This damage is affected by velocity and ship mass. Will damage rocks as well as other entities
# Setting type: Single
# Default value: 20
pierceDamage = 20

## Percentage Damage applied to the Ram piece per hit. Number between 0-1.
# Setting type: Single
# Default value: 0.01
# Acceptable value range: From 0 to 1
percentageDamageToSelf = 0.01

## Rams will continue to apply damage based on their velocity even after the initial impact
# Setting type: Boolean
# Default value: true
AllowContinuousDamage = false

## allows rams to damage both rocks, ores, and higher tier trees and/or prefabs. Tier 1 is bronze. Setting to 100 will allow damage to all types of materials
# Setting type: Int32
# Default value: 100
RamDamageToolTier = 100

## allows rams to hit characters/entities
# Setting type: Boolean
# Default value: true
CanHitCharacters = false

## allows rams to hit enemies
# Setting type: Boolean
# Default value: true
CanHitEnemies = false

## allows rams to hit friendlies
# Setting type: Boolean
# Default value: true
CanHitFriendly = false

## allows rams to be damaged. The values set for the damage will be calculated
# Setting type: Boolean
# Default value: true
CanDamageSelf = false

## allows rams to hit friendlies
# Setting type: Boolean
# Default value: true
CanHitEnvironmentOrTerrain = false

## The base ram hit radius area. Stakes are always half the size, this will hit all pieces within this radius, capped between 5 and 10, but 50 is max. Stakes are half this value. Blades are equivalent to this value.
# Setting type: Single
# Default value: 5
# Acceptable value range: From 5 to 50
HitRadius = 5

## Every X seconds, the ram will apply this damage
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.5 to 20
RamHitInterval = 1

## Allows rams to be repaired
# Setting type: Boolean
# Default value: false
RamsCanBeRepaired = true

## Minimum velocity required to activate the ram's damage
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0 to 100
minimumVelocityToTriggerHit = 1

## Damage of the ram is increased by an additional % based on the additional weight of the ship. 1500 mass at 1% would be 5 extra damage. IE 1500-1000 = 500 * 0.01 = 5.
# Setting type: Single
# Default value: 1
RamMaxVelocityMultiplier = 1

## The maximum damage a vehicle can do to a rock or other object it hits.
# Setting type: Single
# Default value: 9000
MaxVehicleHullImpactDamage = 9000

## The minimum damage a vehicle can do to a rock or other object it hits.
# Setting type: Single
# Default value: 50
MinVehicleHullImpactDamage = 50

## Multiplier per each single point of mass the vehicle has how much additional damage is done, multiplied by the velocity.
# Setting type: Single
# Default value: 0.1
VehicleHullMassMultiplierDamage = 0.1

## Makes the vehicle hit with a pickaxe and chop damage effect. This will make the vehicle effective against trees and rocks. Also some rocks normally not destroyable will be IE Spires. Damage is split 66% to pickaxe and 33% to chop damage.
# Setting type: Boolean
# Default value: true
VehicleHullUsesPickaxeAndChopDamage = true

## The tier damage a vehicle can do to a rock or other object it hits. To be balanced this should be a lower value IE (1) bronze. But ashlands will require a higher tier to smash spires FYI.
# Setting type: Int32
# Default value: 100
VehicleHullTier = 100

## Each vehicle has a Ram added it's mesh. Vehicle hull ram damage is calculated with different values.
# Setting type: Boolean
# Default value: true
VehicleHullsAreRams = true

## Damage Multiplier per tier. So far only HardWood (Tier1) Iron (Tier3) available. With base value 1 a Tier 3 mult at 25% additive additional damage would be 1.5. IE (1 * 0.25 * 2 + 1) = 1.5
# Setting type: Single
# Default value: 0.25
# Acceptable value range: From 0 to 4
DamageIncreasePercentagePerTier = 0.25

[Rendering]

## Forces an update during the Update sync of unity meaning it fires every frame for the Ship owner who also owns Physics. This will possibly make updates better for non-boat owners. Noting that the boat owner is determined by the first person on the boat, otherwise the game owns it.
# Setting type: Boolean
# Default value: false
Force Ship Owner Piece Update Per Frame = false

[Server config]

## Protects against crashes breaking raft/vehicle initialization causing raft/vehicles to slowly break pieces attached to it. This will make pieces attached to valid raft ZDOs unbreakable from damage, but still breakable with hammer
# Setting type: Boolean
# Default value: true
Protect Vehicle pieces from breaking on Error = true

## ValheimRAFT hammer menu pieces are registered as disabled unless the user is an Admin, allowing only admins to create rafts. This will update automatically make sure to un-equip the hammer to see it apply (if your remove yourself as admin). Server / client does not need to restart
# Setting type: Boolean
# Default value: false
AdminsCanOnlyBuildRaft = false

## Allows the V1 Raft to be built, this Raft is not performant, but remains in >=v2.0.0 as a Fallback in case there are problems with the new raft
# Setting type: Boolean
# Default value: false
AllowOldV1RaftRecipe = false

## Allows >=v2.0.0 experimental prefabs such as Iron variants of slabs, hulls, and ribs. They do not look great so they are disabled by default
# Setting type: Boolean
# Default value: false
AllowExperimentalPrefabs = false

## Allows Server Admin control over the update tick for the RAFT location. Larger Rafts will take much longer and lag out players, but making this ticket longer will make the raft turn into a box from a long distance away.
# Setting type: Single
# Default value: 5
ServerRaftUpdateZoneInterval = 5

## Makes it so all building pieces (walls, floors, etc) on the ship don't take rain damage.
# Setting type: Boolean
# Default value: true
MakeAllPiecesWaterProof = true

## Allow the raft to fly (jump\crouch to go up and down)
# Setting type: Boolean
# Default value: false
AllowFlight = false

## Allow the raft to use custom rudder speeds set by the player, these speeds are applied alongside sails at half and full speed. See advanced section for the actual speed settings.
# Setting type: Boolean
# Default value: true
AllowCustomRudderSpeeds = true

[Sounds]

## Toggles the ship sail sounds.
# Setting type: Boolean
# Default value: true
Ship Sailing Sounds = true

## Toggles Ship Wake sounds. Can be pretty loud
# Setting type: Boolean
# Default value: true
Ship Wake Sounds = true

## Toggles ShipInWater Sounds, the sound of the hull hitting water
# Setting type: Boolean
# Default value: true
Ship In-Water Sounds = true

[Underwater]

## Make the big waves applies to DEBUG builds only. This is a direct multiplier to height might not work as expected. Debug value for fun
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0 to 5
DEBUG_WaveSizeMultiplier = 1

## Similar to flight mechanics but at sea. Defaults with Space/Jump to increase height and Sneak/Shift to decrease height uses the same flight comamnds.
# Setting type: Boolean
# Default value: false
WaterBallastEnabled = false

## A fixed value to set for all vehicles. Will not be applied if config <EXPERIMENTAL_AboveSurfaceBallastUsesShipMass> is enabled and the ship weight is more than this value. Set it to 100% to always allow the full height of the ship above the surface.
# Setting type: Single
# Default value: 0.5
# Acceptable value range: From 0 to 1
AboveSurfaceBallastMaxShipSizeAboveWater = 0.5

## Ships with high mass to volume will not be able to ballast well above the surface. This adds a ship mass to onboard volume calculation. The calculation is experimental so it might be inaccurate. For now mass to volume includes the length width heigth in a box around the ship. It's unrealistic as of 2.4.0 as this includes emptyspace above water. Eventually this will be calculated via displacement (empty volume with wall all around it) calculation.
# Setting type: Boolean
# Default value: false
EXPERIMENTAL_AboveSurfaceBallastUsesShipMass = false

## Sets the relative offset from the float collider. Can be negative or positive. Recommended is near the float collider. Slightly above it. Leave this alone unless you know what you are doing.
# Setting type: Single
# Default value: 0.2
# Acceptable value range: From -10 to 10
UNSAFE_BlockingColliderOffset = 0.2

## Allows Monster entities onto the ship and underwater. This means they can go underwater similar to player.
# Setting type: Boolean
# Default value: true
AllowMonsterEntitesUnderwater = true

## List separated by comma for entities that are allowed on the ship. For simplicity consider enabling monsters and tame creatures.
# Setting type: String
# Default value: 
AllowedEntiesList = 

## Lets tamed animals underwater too. Could break or kill them depending on config.
# Setting type: Boolean
# Default value: false
AllowTamedEntiesUnderwater = false

## Flips the water mesh underwater. This can cause some jitters. Turn it on at your own risk. It's improve immersion. Recommended to keep off if you dislike seeing a bit of tearing in the water meshes. Flipping camera above to below surface should fix things.
# Setting type: WaterMeshFlipModeType
# Default value: Disabled
# Acceptable values: Disabled, Everywhere, ExcludeOnboard
FlipWatermeshMode = Disabled

## Zoom value to allow for underwater zooming. Will allow camera to go underwater at values above 0. 0 will reset camera back to default.
# Setting type: Single
# Default value: 5000
# Acceptable value range: From 0 to 5000
UnderwaterShipCameraZoom = 5000

## Adds fog to make underwater appear more realistic. This should be disabled if using Vikings do swim as this mod section is not compatible yet.
# Setting type: Boolean
# Default value: true
UnderwaterFogEnabled = true

## Adds fog to make underwater appear more realistic. This should be disabled if using Vikings do swim as this mod section is not compatible yet.
# Setting type: Color
# Default value: 1A3B12FF
UnderwaterFogColor = 1A3B12FF

## Adds fog to make underwater appear more realistic. This should be disabled if using Vikings do swim as this mod section is not compatible yet.
# Setting type: Single
# Default value: 0.03
UnderwaterFogIntensity = 0.03

## Allows for walking underwater, anywhere, or onship, or eventually within the water displaced area only. Disabled with remove all water logic. DEBUG_WaterZoneOnly is not supported yet
# Setting type: UnderwaterAccessModeType
# Default value: Disabled
# Acceptable values: Disabled, Everywhere, OnboardOnly, DEBUG_WaterZoneOnly
UnderwaterAccessMode = Disabled

## Adds an underwater bubble conforming around the vehicle hull. Allowing for a underwater like distortion effect without needing to use fog.
# Setting type: Boolean
# Default value: true
HasUnderwaterHullBubbleEffect = true

## Set the underwater bubble color
# Setting type: Color
# Default value: 006666CC
UnderwaterBubbleEffectColor = 006666CC

[Underwater: Debug]

## Lets you choose from the water displacement mesh primitives. These will be stored as ZDOs. Not super user friendly yet...
# Setting type: PrimitiveType
# Default value: Cube
# Acceptable values: Sphere, Capsule, Cylinder, Cube, Plane, Quad
DEBUG_WaterDisplacementMeshPrimitive = Cube

## Enables depth overrides
# Setting type: Boolean
# Default value: false
DEBUG_HasDepthOverrides = false

## Force Overrides the WATER depth for character on boats. Useful for testing how a player can swim to the lowest depth (liquid depth).
# Setting type: Single
# Default value: 30
# Acceptable value range: From 0 to 50
DEBUG_WaterDepthOverride = 30

## Force Overrides the liquid CACHED depth for character on boats.
# Setting type: Single
# Default value: 0
# Acceptable value range: From 0 to 50
DEBUG_LiquidCacheDepthOverride = 0

## Force Overrides the LIQUID depth for character on boats.
# Setting type: Single
# Default value: 15
# Acceptable value range: From 0 to 50
DEBUG_LiquidDepthOverride = 15

## Force Overrides the Swim depth for character on boats. Values above the swim depth force the player into a swim animation.
# Setting type: Single
# Default value: 15
# Acceptable value range: From 0 to 50
DEBUG_SwimDepthOverride = 15

[Vehicle Debugging]

## Will locally log metrics for ValheimVehicles mods. Meant for debugging functional delays
# Setting type: Boolean
# Default value: false
DebugMetricsEnabled = false

## The interval in seconds that the logs output. Lower is performance heavy. Do not have this set to a low value. Requires EnableDebugMetrics to be enabled to update.
# Setting type: Single
# Default value: 1
DebugMetricsTimer = 1

## For realism, the ship continues even when nobody is onboard. This is meant for debugging logout points but also could be useful for realism
# Setting type: Boolean
# Default value: false
HasAutoAnchorDelay = false

## For realism, the ship continues for X amount of time until it either unrenders or a player stops it.
# Setting type: Single
# Default value: 10
# Acceptable value range: From 0 to 60
AutoAnchorDelayTimeInSeconds = 10

## Automatically shows the vehicle colliders useful for debugging the vehicle
# Setting type: Boolean
# Default value: false
Always Show Vehicle Colliders = false

## Enable the VehicleDebugMenu. This shows a GUI menu which has a few shortcuts to debugging/controlling vehicles.
# Setting type: Boolean
# Default value: false
Vehicle Debug Menu = false

## UNSTABLE due to vehicle center point shifting and not being in center of actual vehicle pieces - Automatically moves the vehicle if buried/stuck underground. The close to 0 the closer it will be to teleporting the vehicle above the ground. The higher the number the more lenient it is. Recommended to keep this number above 10. Lower can make the vehicle trigger an infinite loop of teleporting upwards and then falling and re-telporting while gaining velocity
# Setting type: Boolean
# Default value: false
UNSTABLE_PositionAutoFix = false

## Threshold for autofixing stuck vehicles. Large values are less accurate but smaller values may trigger the autofix too frequently
# Setting type: Single
# Default value: 5
# Acceptable value range: From 0 to 10
positionAutoFixThreshold = 5

[Vehicle Physics]

## Controls how much the water pushes the boat upwards directly. This value may affect angular damping too. Recommended to keep the original value. But tweaking can remove or add additional jitter. Higher values likely will add more jitter.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
flightDamping_2.5.3 = 1

## Controls how much the water pushes the boat sideways based on wind direction and velocity.
# Setting type: Single
# Default value: 2
# Acceptable value range: From 0.5 to 5
flightSidewaysDamping_2.5.3 = 2

## Controls how much the water pushes the boat from a vertical angle based on water and velocity. Lower values will cause more rocking and allow better turn rates. Higher values will make the vehicle more stable, but less turning angle and possibly less realistic. If you get motion-sickness this can allow tweaking sway without disabling it all and also prevent rapid turning.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
flightAngularDamping_2.5.3 = 1

## EXPERIMENTAL_FORCE_DISTANCE
# Setting type: Single
# Default value: 1
forceDistance_2.5.3 = 1

## EXPERIMENTAL_FORCE
# Setting type: Single
# Default value: 1
force_2.5.3 = 1

## EXPERIMENTAL_BackwardFORCE
# Setting type: Single
# Default value: 1
backwardForce_2.5.3 = 1

## DEBUG, tweak sailing math. Not supported or tested. Do not mess with defaults. Do not use this unless you know what your doing.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.01 to 0.1
flightSteerForce = 0.1

## DEBUG, tweak sailing math. Not supported or tested. Do not mess with defaults. Do not use this unless you know what your doing.
# Setting type: Single
# Default value: 0.075
# Acceptable value range: From 0.01 to 0.1
UNSTABLE_flightSailForceFactor = 0.075

# Setting type: Single
# Default value: 1.2
flightDrag = 1.2

# Setting type: Single
# Default value: 1.2
flightAngularDrag = 1.2

# Setting type: Single
# Default value: 1
waterSteerForce = 1

## Controls how much the water pushes the boat upwards directly. This value may affect angular damping too. Recommended to keep the original value. But tweaking can remove or add additional jitter. Higher values likely will add more jitter.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
waterDamping_2.5.3 = 1

## Controls how much the water pushes the boat sideways based on wind direction and velocity.
# Setting type: Single
# Default value: 2
# Acceptable value range: From 0.5 to 5
waterSidewaysDamping_2.5.3 = 2

## Controls how much the water pushes the boat from a vertical angle based on water and velocity. Lower values will cause more rocking and allow better turn rates. Higher values will make the vehicle more stable, but less turning angle and possibly less realistic. If you get motion-sickness this can allow tweaking sway without disabling it all and also prevent rapid turning.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
waterAngularDamping_2.5.3 = 1

## DEBUG, tweak sailing math. Not supported or tested. Do not mess with defaults. Do not use this unless you know what your doing.
# Setting type: Single
# Default value: 0.05
# Acceptable value range: From 0.01 to 0.1
UNSTABLE_waterSailForceFactor = 0.05

# Setting type: Single
# Default value: 0.8
waterDrag = 0.8

# Setting type: Single
# Default value: 0.8
waterAngularDrag = 0.8

## Controls how much the water pushes the boat upwards directly. This value may affect angular damping too. Recommended to keep the original value. But tweaking can remove or add additional jitter. Higher values likely will add more jitter.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
submersibleDamping_2.5.3 = 1

## Controls how much the water pushes the boat sideways based on wind direction and velocity.
# Setting type: Single
# Default value: 2
# Acceptable value range: From 0.5 to 5
submersibleSidewaysDamping_2.5.3 = 2

## Controls how much the water pushes the boat from a vertical angle based on water and velocity. Lower values will cause more rocking and allow better turn rates. Higher values will make the vehicle more stable, but less turning angle and possibly less realistic. If you get motion-sickness this can allow tweaking sway without disabling it all and also prevent rapid turning.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 0.05 to 1
submersibleAngularDamping_2.5.3 = 1

# Setting type: Single
# Default value: 1
submersibleSteerForce = 1

## DEBUG, tweak sailing math. Not supported or tested. Do not mess with defaults. Do not use this unless you know what your doing.
# Setting type: Single
# Default value: 0.05
# Acceptable value range: From 0.01 to 0.1
UNSTABLE_submersibleSailForceFactor = 0.05

# Setting type: Single
# Default value: 1.5
submersibleDrag = 1.5

# Setting type: Single
# Default value: 1.5
submersibleAngularDrag = 1.5

## Sets the absolute max speed a vehicle can ever move in. This is X Y Z directions. This will prevent the ship from rapidly flying away. Try staying between 5 and 20. Higher values will increase potential of vehicle flying off to space
# Setting type: Single
# Default value: 10
# Acceptable value range: From 1 to 100
MaxVehicleLinearVelocity = 10

## Sets the absolute max speed a vehicle can ever move in vertical direction. This will limit the ship capability to launch into space. Lower values are safer. Too low and the vehicle will not use gravity well
# Setting type: Single
# Default value: 3
# Acceptable value range: From 1 to 20
MaxVehicleLinearYVelocity = 3

## Sets the absolute max speed a vehicle can ROTATE in. Having a high value means the vehicle can spin out of control.
# Setting type: Single
# Default value: 5
# Acceptable value range: From 0.1 to 10
MaxVehicleAngularVelocity = 5

## EXPERIMENTAL removes all collision of camera for objects on boat. Should significantly lower jitter when camera smashes into objects on boat it will force camera through it instead of pushing rapidly forward with vehicle force too.
# Setting type: Boolean
# Default value: true
removeCameraCollisionWithObjectsOnBoat = true

## Water delta force multiplier
# Setting type: Single
# Default value: 50
# Acceptable value range: From 10 to 50
waterDeltaForceMultiplier = 50

[Vehicle Physics: Floatation]

## Hull Floatation Collider will determine the location the ship floats and hovers above the sea. Average is the average height of all Vehicle Hull Pieces attached to the vehicle. The point calculate is the center of the prefab. Center is the center point of all the float boats. This center point is determined by the max and min height points included for ship hulls. Lowest is the lowest most hull piece will determine the float height, allowing users to easily raise the ship if needed by adding a piece at the lowest point of the ship. Custom allows for setting floatation between -20 and 20
# Setting type: HullFloatation
# Default value: Custom
# Acceptable values: Average, AverageOfHullPieces, Center, Bottom, Top, Custom
HullFloatationColliderLocation = Custom

## Hull Floatation Collider Customization. Set this value and it will always make the ship float at that offset, will only work when HullFloatationColliderLocation=Custom. Positive numbers sink ship, negative will make ship float higher.
# Setting type: Single
# Default value: 0
# Acceptable value range: From -20 to 20
HullFloatation Custom Offset = 0

## Ensures that a piece placed within the raft is included in the float collider correctly. May not be accurate if the parent GameObjects are changing their scales above or below 1,1,1. Mods like Gizmo could be incompatible. This is enabled by default but may change per update if things are determined to be less stable. Changes Per mod version
# Setting type: Boolean
# Default value: true
EnableExactVehicleBounds_2.5.3 = true

## Set the collision mode of the vehicle ship pieces container. This the container that people walk on and use the boat. Collision Continuous will prevent people from passing through the boat. Other modes might improve performance like Discrete but cost in more jitter or lag.
# Setting type: CollisionDetectionMode
# Default value: Continuous
# Acceptable values: Discrete, Continuous, ContinuousDynamic, ContinuousSpeculative
vehiclePiecesShipCollisionDetectionMode = Continuous

## The threshold at which a vehicle's colliders are joined with another pieces colliders to make a singular hull. Higher numbers will join multiple pieces together into a singular hull. Lower numbers allow for splitting hulls out at the cost of performance.
# Setting type: Single
# Default value: 3
# Acceptable value range: From 0.1 to 10
convexHullJoinDistanceThreshold = 3

## Allows the user to set the debugger hull color.
# Setting type: Color
# Default value: 1A3B1280
convexHullDebuggerColor = 1A3B1280

## Force enables the convex hull. This will be turned off if other commands are run or re-enabled if toggled.
# Setting type: Boolean
# Default value: false
convexHullDebuggerForceEnabled = false

## Sets the hull preview offset, this will allow previewing the hull side by side with your vehicle. This can only be seen if the Vehicle Physics: Floatation.convexHullDebuggerForceEnabled is true.
# Setting type: Vector3
# Default value: {"x":0.0,"y":0.0,"z":0.0}
convexHullPreviewOffset = {"x":0.0,"y":0.0,"z":0.0}

[Vehicle Physics: Velocity Mode]

## EXPERIMENTAL VelocityMode changeable in debug only. Override so mass and vehicle size are accounted for
# Setting type: ForceMode
# Default value: VelocityChange
# Acceptable values: Force, Impulse, VelocityChange, Acceleration
floatationVelocityMode = VelocityChange

## EXPERIMENTAL VelocityMode changeable in debug only. Override so mass and vehicle size are accounted for
# Setting type: ForceMode
# Default value: VelocityChange
# Acceptable values: Force, Impulse, VelocityChange, Acceleration
flyingVelocityMode = VelocityChange

## EXPERIMENTAL VelocityMode changeable in debug only. Override so mass and vehicle size are accounted for
# Setting type: ForceMode
# Default value: VelocityChange
# Acceptable values: Force, Impulse, VelocityChange, Acceleration
turningVelocityMode = VelocityChange

## EXPERIMENTAL VelocityMode changeable in debug only. Override so mass and vehicle size are accounted for
# Setting type: ForceMode
# Default value: VelocityChange
# Acceptable values: Force, Impulse, VelocityChange, Acceleration
sailingVelocityMode = VelocityChange

## EXPERIMENTAL VelocityMode changeable in debug only. Override so mass and vehicle size are accounted for
# Setting type: ForceMode
# Default value: VelocityChange
# Acceptable values: Force, Impulse, VelocityChange, Acceleration
rudderVelocityMode = VelocityChange

